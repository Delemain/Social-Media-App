create database "SocialMediaAppDB"
    with owner postgres;

create sequence public.story_t_storyid_seq
    as integer;

alter sequence public.story_t_storyid_seq owner to postgres;

-- Create the sequence
CREATE SEQUENCE user_t_userid_seq;

-- Create the user_t table with the userid column using the sequence as default
CREATE TABLE user_t (
    userid BIGINT PRIMARY KEY DEFAULT nextval('user_t_userid_seq'),
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    profile_picture_url VARCHAR(255),
    bio VARCHAR(255)
);


CREATE TABLE access_logs (
    logid SERIAL PRIMARY KEY,
    userid BIGINT NOT NULL,
    log_type VARCHAR(20) NOT NULL CHECK (log_type IN ('login', 'logout', 'update')),
    log_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_user
      FOREIGN KEY(userid) 
      REFERENCES user_t(userid)
      ON DELETE CASCADE
);

alter table public.user_t
    owner to postgres;

create table public.story_t
(
    userid     bigint                                                        not null
        references public.user_t,
    storyid    bigint       default nextval('story_t_storyid_seq'::regclass) not null,
    content    varchar(255)                                                  not null,
    date       varchar(255) default now()                                    not null,
    hasimage   boolean      default false                                    not null,
    image_url  varchar(255),
    visibility varchar(20)  default 'public'::character varying              not null
        constraint story_t_visibility_check
            check ((visibility)::text = ANY
                   ((ARRAY ['public'::character varying, 'friends'::character varying])::text[])),
    primary key (userid, storyid)
);

alter table public.story_t
    owner to postgres;

alter sequence public.story_t_storyid_seq owned by public.story_t.storyid;

